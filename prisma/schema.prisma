// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  name String
  bio String @db.Text @default("")
  email String @unique
  phone String?
  avatar String?
  password String
  articles Article[]
  role Role @default(subscriber)
  verified Boolean @default(false)
  blocked Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("users")
}

enum Role {
  subscriber // Can read and comment articles
  author // Can create articles
  editor // Can create and publish articles
  admin // Can create, publish, verify, block... users, articles, tags
  owner // Every thing
}

model Article {
  id Int @id @default(autoincrement())
  title String @default("")
  slug String @unique
  description String @default("")
  content String @db.Text @default("")
  markdown String @db.Text @default("")
  imageUrl String @default("")
  authorId Int
  author User @relation(fields: [authorId],references: [id])
  year Int @db.Year
  published Boolean @default(false)
  commentable Boolean @default(true)
  verified Boolean @default(false)
  blocked Boolean @default(false)
  tags ArticleTag[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("articles")
}

model ArticleTag {
  articleId Int
  article Article @relation(fields: [articleId],references: [id])
  tagId Int
  tag Tag @relation(fields: [tagId],references: [id])
  @@id([articleId,tagId])
  @@map("articles_tags")
}

model Tag {
  id Int @id @default(autoincrement())
  name String @unique
  slug String @unique
  description String? @default("")
  imageUrl String?
  published Boolean @default(true)
  verified Boolean @default(true)
  articles ArticleTag[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("tags")
}
